name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install sshpass
        run: |
          sudo apt-get update -y
          sudo apt-get install -y sshpass

      - name: Deploy to VPS
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHATBOT_API_URL: ${{ secrets.CHATBOT_API_URL }}
          CHATBOT_API_KEY: ${{ secrets.CHATBOT_API_KEY }}
        run: |
          sshpass -p "${VPS_PASSWORD}" ssh -o StrictHostKeyChecking=no "${VPS_USER}@${VPS_HOST}" << 'EOF'
            export TELEGRAM_BOT_TOKEN="${TELEGRAM_BOT_TOKEN}"
            export CHATBOT_API_URL="${CHATBOT_API_URL}"
            export CHATBOT_API_KEY="${CHATBOT_API_KEY}"
            
            # Variabel direktori proyek
            PROJECT_DIR=~/project/telegram-bot-pmb-undiksha
            VENV_DIR=$PROJECT_DIR/venv

            # Cek apakah direktori proyek ada
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "Direktori proyek tidak ditemukan. Membuat direktori dan meng-clone repositori..."
              mkdir -p $PROJECT_DIR
              cd $PROJECT_DIR
              git clone https://github.com/odetv/telegram-bot-pmb-undiksha.git .
            else
              echo "Direktori proyek ditemukan. Memasuki direktori..."
              cd $PROJECT_DIR || { echo "Gagal masuk ke direktori proyek!"; exit 1; }
            fi

            # Cek apakah direktori Git ada
            if [ ! -d ".git" ]; then
              echo "Direktori bukan git repository. Melakukan git clone..."
              git init
              git remote add origin https://github.com/odetv/telegram-bot-pmb-undiksha.git
              git pull origin main
            else
              echo "Git repository ditemukan. Menarik pembaruan terbaru..."
              git reset --hard
              git pull origin main
            fi

            # Cek apakah virtual environment ada, jika tidak, buat yang baru
            if [ ! -d "$VENV_DIR" ]; then
              echo "Virtual environment tidak ditemukan. Membuat virtual environment..."
              python3 -m venv $VENV_DIR
            fi

            # Aktifkan virtual environment
            source $VENV_DIR/bin/activate

            # Install dependencies dari requirements.txt
            if [ -f "requirements.txt" ]; then
              echo "Meninstall dependencies dari requirements.txt..."
              pip install -r requirements.txt
            else
              echo "File requirements.txt tidak ditemukan!"
              exit 1
            fi

            # Hentikan aplikasi yang sedang berjalan
            PIDS=$(ps aux | grep "python bot.py" | grep -v grep | awk '{print $2}')
            if [ -n "$PIDS" ]; then
              echo "Menghentikan aplikasi dengan PID: $PIDS"
              sudo kill -9 $PIDS
            else
              echo "Tidak ada aplikasi yang berjalan."
            fi

            # Jalankan aplikasi
            sudo rm -rf chromadb
            sudo nohup $VENV_DIR/bin/python bot.py > output.log 2>&1 &

            echo "Deploy selesai. Aplikasi Bot sudah berjalan."
          EOF
